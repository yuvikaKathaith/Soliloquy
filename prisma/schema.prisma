generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String       @id @default(cuid())
  clerkUserId   String       @unique
  email         String       @unique
  name          String?
  imageUrl      String?
  collections   Collection[]
  entries       Entry[]
  currentDraft  Draft?
  createdAt     DateTime     @default(now())
  updatedAt     DateTime     @updatedAt
}

model Collection {
  id          String    @id @default(cuid())
  name        String
  description String?
  user        User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId      String
  entries     Entry[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  @@unique([name, userId])
}

model Entry {
  id            String      @id @default(cuid())
  title         String
  content       String      @db.Text 
  mood          String      // References moods.js constants
  moodScore     Int         // Numeric value from moods.js for analytics
  moodImageUrl  String?     // Pixabay image URL
  collection    Collection? @relation(fields: [collectionId], references: [id], onDelete: Cascade)
  collectionId  String?
  user          User       @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId        String
  createdAt     DateTime   @default(now())
  updatedAt     DateTime   @updatedAt
}

model Draft {
  id            String    @id @default(cuid())
  title         String?
  content       String?   @db.Text
  mood          String?   
  user          User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId        String    @unique  // One draft per user
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}